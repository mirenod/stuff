Connect to RDS Oracle Instance:

Use tools like SQLPlus*, SQL Developer, or another SQL client.

Check Mounted File Systems:

sql
SELECT * FROM rdsadmin.rds_file_util.listdir('/rdsdbdata/efs');
This should list the contents of your EFS directory.

4. Use UTL_FILE to Read and Write Files
Create a Directory Object in Oracle:

sql
CREATE OR REPLACE DIRECTORY efs_dir AS '/rdsdbdata/efs';
This directory object points to the EFS mount point.

Grant Permissions:

sql
GRANT READ, WRITE ON DIRECTORY efs_dir TO your_user;
Read from EFS:

sql
DECLARE
  file UTL_FILE.FILE_TYPE;
  line VARCHAR2(1000);
BEGIN
  file := UTL_FILE.FOPEN('EFS_DIR', 'your_file.txt', 'R');
  LOOP
    UTL_FILE.GET_LINE(file, line);
    DBMS_OUTPUT.PUT_LINE(line);
  END LOOP;
  UTL_FILE.FCLOSE(file);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    UTL_FILE.FCLOSE(file);
END;
/
Write to EFS:

sql
DECLARE
  file UTL_FILE.FILE_TYPE;
BEGIN
  file := UTL_FILE.FOPEN('EFS_DIR', 'output.txt', 'W');
  UTL_FILE.PUT_LINE(file, 'Hello, EFS from RDS Oracle!');
  UTL_FILE.FCLOSE(file);
END;
/













#!/bin/bash

if [ -n "$CI_JOB_ID" ]; then
    echo "This script is running in a GitLab CI/CD job."
else
    echo "This script is not running in a GitLab CI/CD job."
fi

#!/bin/bash

# Current environment
current_environment="test"

# Extract ignore_environment value using yq
ignore_env=$(yq e '.ignore_environment[]' your_file.yml)

# Convert to array using a subshell to avoid affecting the global IFS
ignore_env_array=()
while IFS= read -r line; do
    ignore_env_array+=("$line")
done < <(echo "$ignore_env")

# Check if current environment is in ignore_env_array
for env in "${ignore_env_array[@]}"; do
    if [[ "$env" == "$current_environment" ]]; then
        echo "Skipping part of the script because the current environment is $current_environment."
        exit 0  # Skip the rest of the script
    fi
done

# Continue with the rest of your script
echo "Continuing with the script..."
# Place the rest of your script here



#!/bin/bash

# Current environment
current_environment="test"

# Extract ignore_environment value using yq
ignore_env=$(yq e '.ignore_environment[]' your_file.yml)

# Convert to array
IFS=$'\n' read -r -d '' -a ignore_env_array < <(echo "$ignore_env"$'\0')

# Check if current environment is in ignore_env_array
for env in "${ignore_env_array[@]}"; do
    if [[ "$env" == "$current_environment" ]]; then
        echo "Skipping part of the script because the current environment is $current_environment."
        exit 0  # Skip the rest of the script
    fi
done

# Continue with the rest of your script
echo "Continuing with the script..."
# Place the rest of your script here
